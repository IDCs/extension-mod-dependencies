@import "node-content-renderer.scss";

.btn-embed {
  padding: 1px 5px;
  border: 0px;
  color: currentColor;
  background-color: transparent;

  &:hover {
    color: $link-hover-color;
    background-color: initial;
  }
  &:active {
    color: $link-hover-color;
    background-color: initial;
  }
  &:focus {
    color: $link-hover-color;
    background-color: initial;
  }
}

.btn-dependency {
  @extend .btn-embed;
}

.btn-dependency-hasrules svg {
  fill: $link-color;
}

.btn-dependency-unfulfilledrule svg {
  fill: $brand-danger;
}

.btn-dependency-norules svg {
  fill: $gray-dark;
}

.btn-dependency-norules:hover svg {
  fill: $link-hover-color;
}

.btn-conflict {
  @extend .btn-embed;

  transition: box-shadow 1s;
}

.btn-conflict-unsolved svg {
  fill: $brand-danger;
}

.btn-conflict-allsolved svg {
  fill: $brand-success;
}

.btn-conflict-highlight {
  box-shadow: inset 0 0 2px 2px $brand-highlight;
}

.btn-unfulfilled {
  @extend .btn-embed;
  color: $brand-danger;
}

.btn-overrides {
  @extend .btn-embed;
}

.line {
  border-bottom: 1px solid black;
}

.line-connect {
  stroke: $brand-success;
  stroke-width: 3;
}

.line-disconnect {
  stroke: $brand-danger;
  stroke-dasharray: 5,5;
  stroke-width: 2;
}

.conflict-popover {
  max-width: 500px;
  max-height: 600px;
  overflow-y: auto;
}

.conflict-popover p {
  margin-bottom: 0px;
}

.conflict-rule-select {
  display: inline;
  max-width: 150px;
  vertical-align: top;
}

.conflict-rule-description {
  display: inline-block;
  width: 100%;
}

.conflict-rule-reference {
  display: flex;
  align-items: center;

  .conflict-rule-name {
    flex: 2 1 0;
    margin: 0 4px;
  }
  .conflict-rule-version {
    flex: 1 1 0;
  }
}

.rule-fulfilled {
  color: $brand-success;
}

.rule-unfulfilled {
  color: $brand-danger;
}

.rule-fulfilled button,
.rule-unfulfilled button {
  margin-left: 0.75em;
}

.cell-dependencies {
  height: 100%;
  padding: 0 !important;
}

.dependencies-inner {
  text-align: center;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  &.connecting {
    width: 150%;
    margin-left: -25%;
  }
}

.conflict-editor-reverserule {
  margin-left: 4px;
}

.mod-conflict-list .list-group-item {
  display: flex;
  align-items: center;
}

.mod-conflict-graph {
  svg circle {
    fill: $text-color;
  }
  svg line { 
    stroke: $brand-warning;
    stroke-width: 4px;
  }
  .mod-label {
    stroke: $text-color;
  }
  .cycle-link-highlighted {
    stroke: $brand-info;
  }
}

#file-override-dialog {
  .modal-dialog {
    width: 75vw;
  }

  .ReactVirtualized__Grid__innerScrollContainer {
    height: 100%;
    overflow: visible !important;
  }

  .rstcustom__row {
    flex: 1 1 0;
    .rstcustom__rowLabel {
      flex: 1 1 auto;
    }
  }
  .rstcustom__rowWrapper:hover {
    opacity: initial;
  }
}

.file-override-container {
  height: 75vh;
}

.header-dependencies {
  min-width: 110px;
}
